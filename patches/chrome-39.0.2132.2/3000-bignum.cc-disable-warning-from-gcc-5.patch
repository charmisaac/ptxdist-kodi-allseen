Index: chrome-39.0.2132.2/src/third_party/WebKit/Source/wtf/dtoa/bignum.cc
===================================================================
--- chrome-39.0.2132.2.orig/src/third_party/WebKit/Source/wtf/dtoa/bignum.cc
+++ chrome-39.0.2132.2/src/third_party/WebKit/Source/wtf/dtoa/bignum.cc
@@ -109,7 +109,10 @@ namespace double_conversion {
         int length = value.length();
         int pos = 0;
         // Let's just say that each digit needs 4 bits.
+#pragma GCC diagnostic push
+#pragma GCC diagnostic warning "-Wstrict-overflow"
         while (length >= kMaxUint64DecimalDigits) {
+#pragma GCC diagnostic pop
             uint64_t digits = ReadUInt64(value, pos, kMaxUint64DecimalDigits);
             pos += kMaxUint64DecimalDigits;
             length -= kMaxUint64DecimalDigits;
Index: chrome-39.0.2132.2/src/ui/gfx/image/image_util.cc
===================================================================
--- chrome-39.0.2132.2.orig/src/ui/gfx/image/image_util.cc
+++ chrome-39.0.2132.2/src/ui/gfx/image/image_util.cc
@@ -68,7 +68,10 @@ bool VisibleMargins(const ImageSkia& ima
   int inner_min = bitmap.width();
   for (int x = 0; x < bitmap.width(); ++x) {
     for (int y = 0; y < bitmap.height(); ++y) {
+#pragma GCC diagnostic push
+#pragma GCC diagnostic warning "-Wstrict-overflow"
       if (SkColorGetA(bitmap.getColor(x, y)) > kMinimumVisibleOpacity) {
+#pragma GCC diagnostic pop
         inner_min = x;
         break;
       }
