Index: zeromq-4.1.3/src/curve_client.cpp
===================================================================
--- zeromq-4.1.3.orig/src/curve_client.cpp
+++ zeromq-4.1.3/src/curve_client.cpp
@@ -48,6 +48,7 @@ zmq::curve_client_t::curve_client_t (con
     cn_peer_nonce(1),
     sync()
 {
+    int rc;
     memcpy (public_key, options_.curve_public_key, crypto_box_PUBLICKEYBYTES);
     memcpy (secret_key, options_.curve_secret_key, crypto_box_SECRETKEYBYTES);
     memcpy (server_key, options_.curve_server_key, crypto_box_PUBLICKEYBYTES);
@@ -58,11 +59,12 @@ zmq::curve_client_t::curve_client_t (con
     randombytes(tmpbytes, 4);
 #else
     // todo check return code
-    sodium_init();
+    rc = sodium_init();
+    zmq_assert (rc != -1);
 #endif
 
     //  Generate short-term key pair
-    const int rc = crypto_box_keypair (cn_public, cn_secret);
+    rc = crypto_box_keypair (cn_public, cn_secret);
     zmq_assert (rc == 0);
 }
 
Index: zeromq-4.1.3/src/curve_server.cpp
===================================================================
--- zeromq-4.1.3.orig/src/curve_server.cpp
+++ zeromq-4.1.3/src/curve_server.cpp
@@ -52,6 +52,7 @@ zmq::curve_server_t::curve_server_t (ses
     cn_peer_nonce(1),
     sync()
 {
+    int rc;
     //  Fetch our secret key from socket options
     memcpy (secret_key, options_.curve_secret_key, crypto_box_SECRETKEYBYTES);
     scoped_lock_t lock (sync);
@@ -61,11 +62,12 @@ zmq::curve_server_t::curve_server_t (ses
     randombytes(tmpbytes, 4);
 #else
     // todo check return code
-    sodium_init();
+    rc = sodium_init();
+    zmq_assert (rc != -1);
 #endif
 
     //  Generate short-term key pair
-    const int rc = crypto_box_keypair (cn_public, cn_secret);
+    rc = crypto_box_keypair (cn_public, cn_secret);
     zmq_assert (rc == 0);
 }
 
